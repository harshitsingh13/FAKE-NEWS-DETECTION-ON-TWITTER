# -*- coding: utf-8 -*-
"""location_of_followers.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cjj3H8tT_s2-fwgWeOc-67U0DGYsky03
"""

import tweepy
from collections import Counter
import csv
import operator

#getting location of followers

def get_tweets(user_name, number_of_locations) :
    
    consumer_key="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    consumer_secret="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    access_key="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
    access_secret="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

    auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
    auth.set_access_token(access_key, access_secret)
    api=tweepy.API(auth)

    loci=[]
    
    number_of_tweets=0

    csvFile = open('locations_BurkhaDutt.csv', 'w')
    csvWriter = csv.writer(csvFile)
    dummy=0
    try :
        for tweet in tweepy.Cursor(api.followers, id=user_name).items(number_of_tweets) :
            try :
                info=tweet._json
                location=info['location']
                if location!='' :
                    ind=location.find(',')
                    if ind!=-1 :
                        location=location[:ind]
                    loci.append(location)
                    csvWriter.writerow([location])
                    number_of_tweets+=1
                    print(number_of_tweets)
                    print(location)
                if number_of_tweets==number_of_locations :
                    break
            except Exception as e :
                dummy=0
    except tweepy.error.RateLimitError as f :
            dummy=1
            print("RateLimit")
            csvFile.close()
    if dummy==0 :
        csvFile.close()
    return loci

location_arr=get_tweets('@BDUTT', 200)

#getting latitudes and longitudes of locations

from geopy.geocoders import Nominatim
nom=Nominatim(user_agent="kiran")
import csv

f=open('locations_RavishKumar.csv', 'r')
read = csv.reader(f)

lat_arr=[]
lon_arr=[]

for line in read :
    if line!=[] :
        place=line[0]
        print(place)
        location=nom.geocode(place)
        try :
            lat=location.latitude
            lon=location.longitude
            lat_arr.append(lat)
            lon_arr.append(lon)
        except AttributeError :
            print('Not done', place)
f.close()

print('done')

import plotly.express as px
import plotly

fig=px.density_mapbox([],lat=lat_arr, lon=lon_arr, radius=8, mapbox_style='stamen-terrain')
fig.show()
plotly.offline.plot(fig, filename='RavishKumar.html')

